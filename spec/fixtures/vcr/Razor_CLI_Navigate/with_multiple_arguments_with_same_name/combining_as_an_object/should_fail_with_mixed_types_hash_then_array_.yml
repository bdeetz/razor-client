---
http_interactions:
- request:
    method: get
    uri: https://localhost:8151/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '4981'
      Date:
      - Thu, 14 Aug 2014 20:50:07 GMT
    body:
      encoding: US-ASCII
      string: '{"commands":[{"name":"add-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/add-policy-tag","id":"https://localhost:8151/api/commands/add-policy-tag"},{"name":"create-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/create-broker","id":"https://localhost:8151/api/commands/create-broker"},{"name":"create-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/create-policy","id":"https://localhost:8151/api/commands/create-policy"},{"name":"create-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/create-repo","id":"https://localhost:8151/api/commands/create-repo"},{"name":"create-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/create-tag","id":"https://localhost:8151/api/commands/create-tag"},{"name":"create-task","rel":"https://api.puppetlabs.com/razor/v1/commands/create-task","id":"https://localhost:8151/api/commands/create-task"},{"name":"delete-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-broker","id":"https://localhost:8151/api/commands/delete-broker"},{"name":"delete-node","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-node","id":"https://localhost:8151/api/commands/delete-node"},{"name":"delete-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-policy","id":"https://localhost:8151/api/commands/delete-policy"},{"name":"delete-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-repo","id":"https://localhost:8151/api/commands/delete-repo"},{"name":"delete-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-tag","id":"https://localhost:8151/api/commands/delete-tag"},{"name":"disable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/disable-policy","id":"https://localhost:8151/api/commands/disable-policy"},{"name":"enable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/enable-policy","id":"https://localhost:8151/api/commands/enable-policy"},{"name":"modify-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-node-metadata","id":"https://localhost:8151/api/commands/modify-node-metadata"},{"name":"modify-policy-max-count","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-policy-max-count","id":"https://localhost:8151/api/commands/modify-policy-max-count"},{"name":"move-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/move-policy","id":"https://localhost:8151/api/commands/move-policy"},{"name":"reboot-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reboot-node","id":"https://localhost:8151/api/commands/reboot-node"},{"name":"register-node","rel":"https://api.puppetlabs.com/razor/v1/commands/register-node","id":"https://localhost:8151/api/commands/register-node"},{"name":"reinstall-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reinstall-node","id":"https://localhost:8151/api/commands/reinstall-node"},{"name":"remove-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-node-metadata","id":"https://localhost:8151/api/commands/remove-node-metadata"},{"name":"remove-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-policy-tag","id":"https://localhost:8151/api/commands/remove-policy-tag"},{"name":"set-node-desired-power-state","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-desired-power-state","id":"https://localhost:8151/api/commands/set-node-desired-power-state"},{"name":"set-node-hw-info","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-hw-info","id":"https://localhost:8151/api/commands/set-node-hw-info"},{"name":"set-node-ipmi-credentials","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-ipmi-credentials","id":"https://localhost:8151/api/commands/set-node-ipmi-credentials"},{"name":"update-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/update-node-metadata","id":"https://localhost:8151/api/commands/update-node-metadata"},{"name":"update-tag-rule","rel":"https://api.puppetlabs.com/razor/v1/commands/update-tag-rule","id":"https://localhost:8151/api/commands/update-tag-rule"}],"collections":[{"name":"brokers","rel":"https://api.puppetlabs.com/razor/v1/collections/brokers","id":"https://localhost:8151/api/collections/brokers"},{"name":"repos","rel":"https://api.puppetlabs.com/razor/v1/collections/repos","id":"https://localhost:8151/api/collections/repos"},{"name":"tags","rel":"https://api.puppetlabs.com/razor/v1/collections/tags","id":"https://localhost:8151/api/collections/tags"},{"name":"policies","rel":"https://api.puppetlabs.com/razor/v1/collections/policies","id":"https://localhost:8151/api/collections/policies"},{"name":"nodes","rel":"https://api.puppetlabs.com/razor/v1/collections/nodes","id":"https://localhost:8151/api/collections/nodes"},{"name":"tasks","rel":"https://api.puppetlabs.com/razor/v1/collections/tasks","id":"https://localhost:8151/api/collections/tasks"},{"name":"commands","rel":"https://api.puppetlabs.com/razor/v1/collections/commands","id":"https://localhost:8151/api/collections/commands"}],"version":{"server":"v0.15.0-26-gfffaba4-dirty"}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:50:07 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/create-broker
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2568'
      Date:
      - Thu, 14 Aug 2014 20:50:07 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-broker","help":{"full":"# SYNOPSIS\nCreate a new broker
        configuration for hand-off of installed nodes\n\n# DESCRIPTION\nCreate a new
        broker configuration.  Brokers are responsible for handing a node\noff to
        a config management system, such as Puppet or Chef.  In cases where you\nhave
        no configuration management system, you can use the `noop` broker.\n\n# Access
        Control\n\nThis command''s access control pattern: `commands:create-broker:%{name}`\n\nWords
        surrounded by `%{...}` are substitutions from the input data: typically\nthe
        name of the object being modified, or some other critical detail, these\nallow
        roles to be granted partial access to modify the system.\n\nFor more detail
        on how the permission strings are structured and work, you can\nsee the [Shiro
        Permissions documentation][shiro].  That pattern is expanded\nand then a permission
        check applied to it, before the command is authorized.\n\nThese checks only
        apply if security is enabled in the Razor configuration\nfile; on this server
        security is currently disabled.\n\n[shiro]: https://shiro.apache.org/permissions.html\n\n#
        Attributes\n\n * name\n   - The name of the broker, as it will be referenced
        within Razor.\n     This is the name that you supply to, eg, `create-policy`
        to specify\n     which broker the node will be handed off via after installation.\n   -
        This attribute is required.\n   - It must be of type string.\n   - It must
        be between 1 and 250 in length.\n\n * broker-type\n   - The broker type from
        which this broker is created.  The available\n     broker types on your server
        are:\n     - chef\n     - noop\n     - puppet-pe\n     - puppet\n   - This
        attribute is required.\n   - It must be of type string.\n   - It must match
        the name of an existing broker type.\n\n * configuration\n   - The configuration
        for the broker.  The acceptable values here are\n     determined by the `broker-type`
        selected.  In general this has\n     settings like which server to contact,
        and other configuration\n     related to handing on the newly installed system
        to the final\n     configuration management system.\n     \n     This attribute
        can be abbreviated as `c` for convenience.\n   - It must be of type object.\n\n#
        EXAMPLES\n\n  Creating a simple Puppet broker:\n  \n  {\n    \"name\": \"puppet\",\n    \"configuration\":
        {\n       \"server\":      \"puppet.example.org\",\n       \"environment\":
        \"production\"\n    },\n    \"broker-type\": \"puppet\"\n  }\n"},"schema":{"name":{"type":"string"},"broker-type":{"type":"string"},"configuration":{"type":"object"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:50:07 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/create-broker
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2568'
      Date:
      - Thu, 14 Aug 2014 20:50:07 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-broker","help":{"full":"# SYNOPSIS\nCreate a new broker
        configuration for hand-off of installed nodes\n\n# DESCRIPTION\nCreate a new
        broker configuration.  Brokers are responsible for handing a node\noff to
        a config management system, such as Puppet or Chef.  In cases where you\nhave
        no configuration management system, you can use the `noop` broker.\n\n# Access
        Control\n\nThis command''s access control pattern: `commands:create-broker:%{name}`\n\nWords
        surrounded by `%{...}` are substitutions from the input data: typically\nthe
        name of the object being modified, or some other critical detail, these\nallow
        roles to be granted partial access to modify the system.\n\nFor more detail
        on how the permission strings are structured and work, you can\nsee the [Shiro
        Permissions documentation][shiro].  That pattern is expanded\nand then a permission
        check applied to it, before the command is authorized.\n\nThese checks only
        apply if security is enabled in the Razor configuration\nfile; on this server
        security is currently disabled.\n\n[shiro]: https://shiro.apache.org/permissions.html\n\n#
        Attributes\n\n * name\n   - The name of the broker, as it will be referenced
        within Razor.\n     This is the name that you supply to, eg, `create-policy`
        to specify\n     which broker the node will be handed off via after installation.\n   -
        This attribute is required.\n   - It must be of type string.\n   - It must
        be between 1 and 250 in length.\n\n * broker-type\n   - The broker type from
        which this broker is created.  The available\n     broker types on your server
        are:\n     - chef\n     - noop\n     - puppet-pe\n     - puppet\n   - This
        attribute is required.\n   - It must be of type string.\n   - It must match
        the name of an existing broker type.\n\n * configuration\n   - The configuration
        for the broker.  The acceptable values here are\n     determined by the `broker-type`
        selected.  In general this has\n     settings like which server to contact,
        and other configuration\n     related to handing on the newly installed system
        to the final\n     configuration management system.\n     \n     This attribute
        can be abbreviated as `c` for convenience.\n   - It must be of type object.\n\n#
        EXAMPLES\n\n  Creating a simple Puppet broker:\n  \n  {\n    \"name\": \"puppet\",\n    \"configuration\":
        {\n       \"server\":      \"puppet.example.org\",\n       \"environment\":
        \"production\"\n    },\n    \"broker-type\": \"puppet\"\n  }\n"},"schema":{"name":{"type":"string"},"broker-type":{"type":"string"},"configuration":{"type":"object"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:50:08 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/create-broker
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2568'
      Date:
      - Thu, 14 Aug 2014 20:50:07 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-broker","help":{"full":"# SYNOPSIS\nCreate a new broker
        configuration for hand-off of installed nodes\n\n# DESCRIPTION\nCreate a new
        broker configuration.  Brokers are responsible for handing a node\noff to
        a config management system, such as Puppet or Chef.  In cases where you\nhave
        no configuration management system, you can use the `noop` broker.\n\n# Access
        Control\n\nThis command''s access control pattern: `commands:create-broker:%{name}`\n\nWords
        surrounded by `%{...}` are substitutions from the input data: typically\nthe
        name of the object being modified, or some other critical detail, these\nallow
        roles to be granted partial access to modify the system.\n\nFor more detail
        on how the permission strings are structured and work, you can\nsee the [Shiro
        Permissions documentation][shiro].  That pattern is expanded\nand then a permission
        check applied to it, before the command is authorized.\n\nThese checks only
        apply if security is enabled in the Razor configuration\nfile; on this server
        security is currently disabled.\n\n[shiro]: https://shiro.apache.org/permissions.html\n\n#
        Attributes\n\n * name\n   - The name of the broker, as it will be referenced
        within Razor.\n     This is the name that you supply to, eg, `create-policy`
        to specify\n     which broker the node will be handed off via after installation.\n   -
        This attribute is required.\n   - It must be of type string.\n   - It must
        be between 1 and 250 in length.\n\n * broker-type\n   - The broker type from
        which this broker is created.  The available\n     broker types on your server
        are:\n     - chef\n     - noop\n     - puppet-pe\n     - puppet\n   - This
        attribute is required.\n   - It must be of type string.\n   - It must match
        the name of an existing broker type.\n\n * configuration\n   - The configuration
        for the broker.  The acceptable values here are\n     determined by the `broker-type`
        selected.  In general this has\n     settings like which server to contact,
        and other configuration\n     related to handing on the newly installed system
        to the final\n     configuration management system.\n     \n     This attribute
        can be abbreviated as `c` for convenience.\n   - It must be of type object.\n\n#
        EXAMPLES\n\n  Creating a simple Puppet broker:\n  \n  {\n    \"name\": \"puppet\",\n    \"configuration\":
        {\n       \"server\":      \"puppet.example.org\",\n       \"environment\":
        \"production\"\n    },\n    \"broker-type\": \"puppet\"\n  }\n"},"schema":{"name":{"type":"string"},"broker-type":{"type":"string"},"configuration":{"type":"object"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:50:08 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/create-broker
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2568'
      Date:
      - Thu, 14 Aug 2014 20:50:07 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"create-broker","help":{"full":"# SYNOPSIS\nCreate a new broker
        configuration for hand-off of installed nodes\n\n# DESCRIPTION\nCreate a new
        broker configuration.  Brokers are responsible for handing a node\noff to
        a config management system, such as Puppet or Chef.  In cases where you\nhave
        no configuration management system, you can use the `noop` broker.\n\n# Access
        Control\n\nThis command''s access control pattern: `commands:create-broker:%{name}`\n\nWords
        surrounded by `%{...}` are substitutions from the input data: typically\nthe
        name of the object being modified, or some other critical detail, these\nallow
        roles to be granted partial access to modify the system.\n\nFor more detail
        on how the permission strings are structured and work, you can\nsee the [Shiro
        Permissions documentation][shiro].  That pattern is expanded\nand then a permission
        check applied to it, before the command is authorized.\n\nThese checks only
        apply if security is enabled in the Razor configuration\nfile; on this server
        security is currently disabled.\n\n[shiro]: https://shiro.apache.org/permissions.html\n\n#
        Attributes\n\n * name\n   - The name of the broker, as it will be referenced
        within Razor.\n     This is the name that you supply to, eg, `create-policy`
        to specify\n     which broker the node will be handed off via after installation.\n   -
        This attribute is required.\n   - It must be of type string.\n   - It must
        be between 1 and 250 in length.\n\n * broker-type\n   - The broker type from
        which this broker is created.  The available\n     broker types on your server
        are:\n     - chef\n     - noop\n     - puppet-pe\n     - puppet\n   - This
        attribute is required.\n   - It must be of type string.\n   - It must match
        the name of an existing broker type.\n\n * configuration\n   - The configuration
        for the broker.  The acceptable values here are\n     determined by the `broker-type`
        selected.  In general this has\n     settings like which server to contact,
        and other configuration\n     related to handing on the newly installed system
        to the final\n     configuration management system.\n     \n     This attribute
        can be abbreviated as `c` for convenience.\n   - It must be of type object.\n\n#
        EXAMPLES\n\n  Creating a simple Puppet broker:\n  \n  {\n    \"name\": \"puppet\",\n    \"configuration\":
        {\n       \"server\":      \"puppet.example.org\",\n       \"environment\":
        \"production\"\n    },\n    \"broker-type\": \"puppet\"\n  }\n"},"schema":{"name":{"type":"string"},"broker-type":{"type":"string"},"configuration":{"type":"object"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:50:08 GMT
recorded_with: VCR 2.9.2
