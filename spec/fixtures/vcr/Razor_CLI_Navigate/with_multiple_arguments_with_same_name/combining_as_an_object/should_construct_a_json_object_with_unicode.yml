---
http_interactions:
- request:
    method: get
    uri: https://localhost:8151/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '4981'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"commands":[{"name":"add-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/add-policy-tag","id":"https://localhost:8151/api/commands/add-policy-tag"},{"name":"create-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/create-broker","id":"https://localhost:8151/api/commands/create-broker"},{"name":"create-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/create-policy","id":"https://localhost:8151/api/commands/create-policy"},{"name":"create-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/create-repo","id":"https://localhost:8151/api/commands/create-repo"},{"name":"create-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/create-tag","id":"https://localhost:8151/api/commands/create-tag"},{"name":"create-task","rel":"https://api.puppetlabs.com/razor/v1/commands/create-task","id":"https://localhost:8151/api/commands/create-task"},{"name":"delete-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-broker","id":"https://localhost:8151/api/commands/delete-broker"},{"name":"delete-node","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-node","id":"https://localhost:8151/api/commands/delete-node"},{"name":"delete-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-policy","id":"https://localhost:8151/api/commands/delete-policy"},{"name":"delete-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-repo","id":"https://localhost:8151/api/commands/delete-repo"},{"name":"delete-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-tag","id":"https://localhost:8151/api/commands/delete-tag"},{"name":"disable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/disable-policy","id":"https://localhost:8151/api/commands/disable-policy"},{"name":"enable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/enable-policy","id":"https://localhost:8151/api/commands/enable-policy"},{"name":"modify-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-node-metadata","id":"https://localhost:8151/api/commands/modify-node-metadata"},{"name":"modify-policy-max-count","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-policy-max-count","id":"https://localhost:8151/api/commands/modify-policy-max-count"},{"name":"move-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/move-policy","id":"https://localhost:8151/api/commands/move-policy"},{"name":"reboot-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reboot-node","id":"https://localhost:8151/api/commands/reboot-node"},{"name":"register-node","rel":"https://api.puppetlabs.com/razor/v1/commands/register-node","id":"https://localhost:8151/api/commands/register-node"},{"name":"reinstall-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reinstall-node","id":"https://localhost:8151/api/commands/reinstall-node"},{"name":"remove-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-node-metadata","id":"https://localhost:8151/api/commands/remove-node-metadata"},{"name":"remove-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-policy-tag","id":"https://localhost:8151/api/commands/remove-policy-tag"},{"name":"set-node-desired-power-state","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-desired-power-state","id":"https://localhost:8151/api/commands/set-node-desired-power-state"},{"name":"set-node-hw-info","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-hw-info","id":"https://localhost:8151/api/commands/set-node-hw-info"},{"name":"set-node-ipmi-credentials","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-ipmi-credentials","id":"https://localhost:8151/api/commands/set-node-ipmi-credentials"},{"name":"update-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/update-node-metadata","id":"https://localhost:8151/api/commands/update-node-metadata"},{"name":"update-tag-rule","rel":"https://api.puppetlabs.com/razor/v1/commands/update-tag-rule","id":"https://localhost:8151/api/commands/update-tag-rule"}],"collections":[{"name":"brokers","rel":"https://api.puppetlabs.com/razor/v1/collections/brokers","id":"https://localhost:8151/api/collections/brokers"},{"name":"repos","rel":"https://api.puppetlabs.com/razor/v1/collections/repos","id":"https://localhost:8151/api/collections/repos"},{"name":"tags","rel":"https://api.puppetlabs.com/razor/v1/collections/tags","id":"https://localhost:8151/api/collections/tags"},{"name":"policies","rel":"https://api.puppetlabs.com/razor/v1/collections/policies","id":"https://localhost:8151/api/collections/policies"},{"name":"nodes","rel":"https://api.puppetlabs.com/razor/v1/collections/nodes","id":"https://localhost:8151/api/collections/nodes"},{"name":"tasks","rel":"https://api.puppetlabs.com/razor/v1/collections/tasks","id":"https://localhost:8151/api/collections/tasks"},{"name":"commands","rel":"https://api.puppetlabs.com/razor/v1/collections/commands","id":"https://localhost:8151/api/collections/commands"}],"version":{"server":"v0.15.0-26-gfffaba4-dirty"}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/register-node
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2936'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"register-node","help":{"full":"# SYNOPSIS\nRegister a node
        with Razor before it is discovered\n\n# DESCRIPTION\nIn order to make brownfield
        deployments of Razor easier we allow users to\nregister nodes explicitly.  This
        command allows you to perform the same\nregistration that would happen when
        a new node checked in, ahead of time.\n\nIn order for this to be effective
        the hw_info must contain enough information\nthat the node can successfully
        be matched during the iPXE boot phase.\n\nIf the node matches an existing
        node, in keeping with the overall policy of\ncommands declaring desired state,
        the node installed field will be updated to\nmatch the value in this command.\n\nThe
        final state is that a node with the supplied hardware information, and the\ndesired
        installed state, will be present in the database, regardless of it\nexisting
        before hand or not.\n\n# Access Control\n\nThis command''s access control
        pattern: `commands:register-node`\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        https://shiro.apache.org/permissions.html\n\n# Attributes\n\n * installed\n   -
        Should the node be considered ''installed'' already?  Installed nodes are\n     not
        eligible for policy matching, and will simply boot locally.\n   - This attribute
        is required.\n   - It must be of type boolean.\n\n * hw-info\n   - The hardware
        information for the node.  This is used to match the node on first\n     boot
        with the record in the database.  The order of MAC address assignment in\n     this
        data is not significant, as a node with reordered MAC addresses will be\n     treated
        as the same node.\n   - This attribute is required.\n   - It must be of type
        object.\n   - It must be between 1 and Infinity in length.\n   \n   # Attributes\n   \n    *
        serial\n      - The DMI serial number of the node\n      - It must be of type
        string.\n   \n    * asset\n      - The DMI asset tag of the node\n      -
        It must be of type string.\n   \n    * uuid\n      - The DMI UUID of the node\n      -
        It must be of type string.\n\n# EXAMPLES\n\n  Register a machine before you
        boot it, and note that it already has an OS\n  installed, so should not be
        subject to policy-based reinstallation:\n  \n      {\n        \"hw_info\":
        {\n          \"net0\":   \"78:31:c1:be:c8:00\",\n          \"net1\":   \"72:00:01:f2:13:f0\",\n          \"net2\":   \"72:00:01:f2:13:f1\",\n          \"serial\":
        \"xxxxxxxxxxx\",\n          \"asset\":  \"Asset-1234567890\",\n          \"uuid\":   \"Not
        Settable\"\n        },\n        \"installed\": true\n      }\n"},"schema":{"installed":{"type":"boolean"},"hw-info":{"type":"object"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/register-node
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2936'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"register-node","help":{"full":"# SYNOPSIS\nRegister a node
        with Razor before it is discovered\n\n# DESCRIPTION\nIn order to make brownfield
        deployments of Razor easier we allow users to\nregister nodes explicitly.  This
        command allows you to perform the same\nregistration that would happen when
        a new node checked in, ahead of time.\n\nIn order for this to be effective
        the hw_info must contain enough information\nthat the node can successfully
        be matched during the iPXE boot phase.\n\nIf the node matches an existing
        node, in keeping with the overall policy of\ncommands declaring desired state,
        the node installed field will be updated to\nmatch the value in this command.\n\nThe
        final state is that a node with the supplied hardware information, and the\ndesired
        installed state, will be present in the database, regardless of it\nexisting
        before hand or not.\n\n# Access Control\n\nThis command''s access control
        pattern: `commands:register-node`\n\nFor more detail on how the permission
        strings are structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        https://shiro.apache.org/permissions.html\n\n# Attributes\n\n * installed\n   -
        Should the node be considered ''installed'' already?  Installed nodes are\n     not
        eligible for policy matching, and will simply boot locally.\n   - This attribute
        is required.\n   - It must be of type boolean.\n\n * hw-info\n   - The hardware
        information for the node.  This is used to match the node on first\n     boot
        with the record in the database.  The order of MAC address assignment in\n     this
        data is not significant, as a node with reordered MAC addresses will be\n     treated
        as the same node.\n   - This attribute is required.\n   - It must be of type
        object.\n   - It must be between 1 and Infinity in length.\n   \n   # Attributes\n   \n    *
        serial\n      - The DMI serial number of the node\n      - It must be of type
        string.\n   \n    * asset\n      - The DMI asset tag of the node\n      -
        It must be of type string.\n   \n    * uuid\n      - The DMI UUID of the node\n      -
        It must be of type string.\n\n# EXAMPLES\n\n  Register a machine before you
        boot it, and note that it already has an OS\n  installed, so should not be
        subject to policy-based reinstallation:\n  \n      {\n        \"hw_info\":
        {\n          \"net0\":   \"78:31:c1:be:c8:00\",\n          \"net1\":   \"72:00:01:f2:13:f0\",\n          \"net2\":   \"72:00:01:f2:13:f1\",\n          \"serial\":
        \"xxxxxxxxxxx\",\n          \"asset\":  \"Asset-1234567890\",\n          \"uuid\":   \"Not
        Settable\"\n        },\n        \"installed\": true\n      }\n"},"schema":{"installed":{"type":"boolean"},"hw-info":{"type":"object"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: post
    uri: https://localhost:8151/api/commands/register-node
    body:
      encoding: UTF-8
      string: '{"installed":true,"hw-info":{"net0":"abcdef"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Content-Type:
      - application/json
      Content-Length:
      - '46'
      User-Agent:
      - Ruby
  response:
    status:
      code: 202
      message: Accepted
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '203'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"https://api.puppetlabs.com/razor/v1/collections/nodes/member","id":"https://localhost:8151/api/collections/nodes/node1","name":"node1","command":"https://localhost:8151/api/collections/commands/1"}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: get
    uri: https://localhost:8151/api/collections/nodes/node1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '376'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"https://api.puppetlabs.com/razor/v1/collections/nodes/member","id":"https://localhost:8151/api/collections/nodes/node1","name":"node1","hw_info":{"mac":["abcdef"]},"log":{"id":"https://localhost:8151/api/collections/nodes/node1/log","name":"log"},"tags":[],"state":{"installed":"true","installed_at":"2014-08-14T15:49:53-05:00"},"ipmi":{"hostname":null,"username":null}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: get
    uri: https://localhost:8151/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '4981'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"commands":[{"name":"add-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/add-policy-tag","id":"https://localhost:8151/api/commands/add-policy-tag"},{"name":"create-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/create-broker","id":"https://localhost:8151/api/commands/create-broker"},{"name":"create-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/create-policy","id":"https://localhost:8151/api/commands/create-policy"},{"name":"create-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/create-repo","id":"https://localhost:8151/api/commands/create-repo"},{"name":"create-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/create-tag","id":"https://localhost:8151/api/commands/create-tag"},{"name":"create-task","rel":"https://api.puppetlabs.com/razor/v1/commands/create-task","id":"https://localhost:8151/api/commands/create-task"},{"name":"delete-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-broker","id":"https://localhost:8151/api/commands/delete-broker"},{"name":"delete-node","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-node","id":"https://localhost:8151/api/commands/delete-node"},{"name":"delete-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-policy","id":"https://localhost:8151/api/commands/delete-policy"},{"name":"delete-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-repo","id":"https://localhost:8151/api/commands/delete-repo"},{"name":"delete-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-tag","id":"https://localhost:8151/api/commands/delete-tag"},{"name":"disable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/disable-policy","id":"https://localhost:8151/api/commands/disable-policy"},{"name":"enable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/enable-policy","id":"https://localhost:8151/api/commands/enable-policy"},{"name":"modify-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-node-metadata","id":"https://localhost:8151/api/commands/modify-node-metadata"},{"name":"modify-policy-max-count","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-policy-max-count","id":"https://localhost:8151/api/commands/modify-policy-max-count"},{"name":"move-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/move-policy","id":"https://localhost:8151/api/commands/move-policy"},{"name":"reboot-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reboot-node","id":"https://localhost:8151/api/commands/reboot-node"},{"name":"register-node","rel":"https://api.puppetlabs.com/razor/v1/commands/register-node","id":"https://localhost:8151/api/commands/register-node"},{"name":"reinstall-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reinstall-node","id":"https://localhost:8151/api/commands/reinstall-node"},{"name":"remove-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-node-metadata","id":"https://localhost:8151/api/commands/remove-node-metadata"},{"name":"remove-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-policy-tag","id":"https://localhost:8151/api/commands/remove-policy-tag"},{"name":"set-node-desired-power-state","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-desired-power-state","id":"https://localhost:8151/api/commands/set-node-desired-power-state"},{"name":"set-node-hw-info","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-hw-info","id":"https://localhost:8151/api/commands/set-node-hw-info"},{"name":"set-node-ipmi-credentials","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-ipmi-credentials","id":"https://localhost:8151/api/commands/set-node-ipmi-credentials"},{"name":"update-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/update-node-metadata","id":"https://localhost:8151/api/commands/update-node-metadata"},{"name":"update-tag-rule","rel":"https://api.puppetlabs.com/razor/v1/commands/update-tag-rule","id":"https://localhost:8151/api/commands/update-tag-rule"}],"collections":[{"name":"brokers","rel":"https://api.puppetlabs.com/razor/v1/collections/brokers","id":"https://localhost:8151/api/collections/brokers"},{"name":"repos","rel":"https://api.puppetlabs.com/razor/v1/collections/repos","id":"https://localhost:8151/api/collections/repos"},{"name":"tags","rel":"https://api.puppetlabs.com/razor/v1/collections/tags","id":"https://localhost:8151/api/collections/tags"},{"name":"policies","rel":"https://api.puppetlabs.com/razor/v1/collections/policies","id":"https://localhost:8151/api/collections/policies"},{"name":"nodes","rel":"https://api.puppetlabs.com/razor/v1/collections/nodes","id":"https://localhost:8151/api/collections/nodes"},{"name":"tasks","rel":"https://api.puppetlabs.com/razor/v1/collections/tasks","id":"https://localhost:8151/api/collections/tasks"},{"name":"commands","rel":"https://api.puppetlabs.com/razor/v1/collections/commands","id":"https://localhost:8151/api/collections/commands"}],"version":{"server":"v0.15.0-26-gfffaba4-dirty"}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/modify-node-metadata
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2610'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"modify-node-metadata","help":{"full":"# SYNOPSIS\nPerform
        various editing operations on node metadata\n\n# DESCRIPTION\nNode metadata
        can be added, changed, or removed with this command; it contains\na limited
        editing language to make changes to the existing metadata in an\natomic fashion.\n\nIt
        can also clear all metadata from a node, although that operation is\nexclusive
        to all other editing operations, and cannot be performed atomically\nwith
        them.\n\n# Access Control\n\nThis command''s access control pattern: `commands:modify-node-metadata:%{node}`\n\nWords
        surrounded by `%{...}` are substitutions from the input data: typically\nthe
        name of the object being modified, or some other critical detail, these\nallow
        roles to be granted partial access to modify the system.\n\nFor more detail
        on how the permission strings are structured and work, you can\nsee the [Shiro
        Permissions documentation][shiro].  That pattern is expanded\nand then a permission
        check applied to it, before the command is authorized.\n\nThese checks only
        apply if security is enabled in the Razor configuration\nfile; on this server
        security is currently disabled.\n\n[shiro]: https://shiro.apache.org/permissions.html\n\n#
        Attributes\n\n * node\n   - The name of the node for which to modify metadata.\n   -
        This attribute is required.\n   - It must be of type string.\n   - It must
        match the name of an existing node.\n\n * update\n   - The metadata to update\n   -
        It must be of type object.\n\n * remove\n   - The metadata to remove\n   -
        It must be of type array.\n\n * clear\n   - Remove all metadata from the node.  Cannot
        be used together with\n     either ''update'' or ''remove''.\n   - It must
        be of type boolean.\n   - If present, update, remove must not be present.\n\n
        * no-replace\n   - If true, the `update` operation will cause this command
        to fail if the\n     metadata key is already present on the node.  No effect
        on `remove` or\n     clear.\n   - It must be of type boolean.\n\n# EXAMPLES\n\n  Editing
        node metadata, by adding and removing some keys, but refusing to\n  modify
        an existing value already present on a node:\n  \n      {\n          \"node\":
        \"node1\",\n          \"update\": {\n              \"key1\": \"value1\",\n              \"key2\":
        \"value2\"\n          }\n          \"remove\": [\"key3\", \"key4\"],\n          \"no-replace\":
        true\n      }\n  \n  Removing all node metadata:\n  \n      {\"node\": \"node1\",
        \"clear\": true}\n"},"schema":{"node":{"type":"string"},"update":{"type":"object"},"remove":{"type":"array"},"clear":{"type":"boolean"},"no-replace":{"type":"boolean"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/modify-node-metadata
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.15.0-26-gfffaba4-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2610'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"modify-node-metadata","help":{"full":"# SYNOPSIS\nPerform
        various editing operations on node metadata\n\n# DESCRIPTION\nNode metadata
        can be added, changed, or removed with this command; it contains\na limited
        editing language to make changes to the existing metadata in an\natomic fashion.\n\nIt
        can also clear all metadata from a node, although that operation is\nexclusive
        to all other editing operations, and cannot be performed atomically\nwith
        them.\n\n# Access Control\n\nThis command''s access control pattern: `commands:modify-node-metadata:%{node}`\n\nWords
        surrounded by `%{...}` are substitutions from the input data: typically\nthe
        name of the object being modified, or some other critical detail, these\nallow
        roles to be granted partial access to modify the system.\n\nFor more detail
        on how the permission strings are structured and work, you can\nsee the [Shiro
        Permissions documentation][shiro].  That pattern is expanded\nand then a permission
        check applied to it, before the command is authorized.\n\nThese checks only
        apply if security is enabled in the Razor configuration\nfile; on this server
        security is currently disabled.\n\n[shiro]: https://shiro.apache.org/permissions.html\n\n#
        Attributes\n\n * node\n   - The name of the node for which to modify metadata.\n   -
        This attribute is required.\n   - It must be of type string.\n   - It must
        match the name of an existing node.\n\n * update\n   - The metadata to update\n   -
        It must be of type object.\n\n * remove\n   - The metadata to remove\n   -
        It must be of type array.\n\n * clear\n   - Remove all metadata from the node.  Cannot
        be used together with\n     either ''update'' or ''remove''.\n   - It must
        be of type boolean.\n   - If present, update, remove must not be present.\n\n
        * no-replace\n   - If true, the `update` operation will cause this command
        to fail if the\n     metadata key is already present on the node.  No effect
        on `remove` or\n     clear.\n   - It must be of type boolean.\n\n# EXAMPLES\n\n  Editing
        node metadata, by adding and removing some keys, but refusing to\n  modify
        an existing value already present on a node:\n  \n      {\n          \"node\":
        \"node1\",\n          \"update\": {\n              \"key1\": \"value1\",\n              \"key2\":
        \"value2\"\n          }\n          \"remove\": [\"key3\", \"key4\"],\n          \"no-replace\":
        true\n      }\n  \n  Removing all node metadata:\n  \n      {\"node\": \"node1\",
        \"clear\": true}\n"},"schema":{"node":{"type":"string"},"update":{"type":"object"},"remove":{"type":"array"},"clear":{"type":"boolean"},"no-replace":{"type":"boolean"}}}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: post
    uri: https://localhost:8151/api/commands/modify-node-metadata
    body:
      encoding: UTF-8
      string: '{"node":"node1","update":{"keyᓱ123":"valueᓱ1"}}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Content-Type:
      - application/json
      Content-Length:
      - '51'
      User-Agent:
      - Ruby
  response:
    status:
      code: 202
      message: Accepted
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '203'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: US-ASCII
      string: '{"spec":"https://api.puppetlabs.com/razor/v1/collections/nodes/member","id":"https://localhost:8151/api/collections/nodes/node1","name":"node1","command":"https://localhost:8151/api/collections/commands/2"}'
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
- request:
    method: get
    uri: https://localhost:8151/api/collections/nodes/node1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '413'
      Date:
      - Thu, 14 Aug 2014 20:49:53 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJzcGVjIjoiaHR0cDovL2FwaS5wdXBwZXRsYWJzLmNvbS9yYXpvci92MS9j
        b2xsZWN0aW9ucy9ub2Rlcy9tZW1iZXIiLCJpZCI6Imh0dHA6Ly9sb2NhbGhv
        c3Q6ODA4MC9hcGkvY29sbGVjdGlvbnMvbm9kZXMvbm9kZTEiLCJuYW1lIjoi
        bm9kZTEiLCJod19pbmZvIjp7Im1hYyI6WyJhYmNkZWYiXX0sImxvZyI6eyJp
        ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvY29sbGVjdGlvbnMvbm9k
        ZXMvbm9kZTEvbG9nIiwibmFtZSI6ImxvZyJ9LCJ0YWdzIjpbXSwibWV0YWRh
        dGEiOnsia2V54ZOxMTIzIjoidmFsdWXhk7ExIn0sInN0YXRlIjp7Imluc3Rh
        bGxlZCI6InRydWUiLCJpbnN0YWxsZWRfYXQiOiIyMDE0LTA4LTE0VDE1OjQ5
        OjUzLTA1OjAwIn0sImlwbWkiOnsiaG9zdG5hbWUiOm51bGwsInVzZXJuYW1l
        IjpudWxsfX0=
    http_version:
  recorded_at: Thu, 14 Aug 2014 20:49:53 GMT
recorded_with: VCR 2.9.2
