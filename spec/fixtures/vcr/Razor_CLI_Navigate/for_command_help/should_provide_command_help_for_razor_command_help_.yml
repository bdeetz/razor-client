---
http_interactions:
- request:
    method: get
    uri: https://localhost:8151/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '4982'
      Date:
      - Fri, 16 May 2014 21:36:47 GMT
    body:
      encoding: US-ASCII
      string: '{"commands":[{"name":"add-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/add-policy-tag","id":"https://localhost:8151/api/commands/add-policy-tag"},{"name":"create-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/create-broker","id":"https://localhost:8151/api/commands/create-broker"},{"name":"create-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/create-policy","id":"https://localhost:8151/api/commands/create-policy"},{"name":"create-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/create-repo","id":"https://localhost:8151/api/commands/create-repo"},{"name":"create-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/create-tag","id":"https://localhost:8151/api/commands/create-tag"},{"name":"create-task","rel":"https://api.puppetlabs.com/razor/v1/commands/create-task","id":"https://localhost:8151/api/commands/create-task"},{"name":"delete-broker","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-broker","id":"https://localhost:8151/api/commands/delete-broker"},{"name":"delete-node","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-node","id":"https://localhost:8151/api/commands/delete-node"},{"name":"delete-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-policy","id":"https://localhost:8151/api/commands/delete-policy"},{"name":"delete-repo","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-repo","id":"https://localhost:8151/api/commands/delete-repo"},{"name":"delete-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/delete-tag","id":"https://localhost:8151/api/commands/delete-tag"},{"name":"disable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/disable-policy","id":"https://localhost:8151/api/commands/disable-policy"},{"name":"enable-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/enable-policy","id":"https://localhost:8151/api/commands/enable-policy"},{"name":"modify-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-node-metadata","id":"https://localhost:8151/api/commands/modify-node-metadata"},{"name":"modify-policy-max-count","rel":"https://api.puppetlabs.com/razor/v1/commands/modify-policy-max-count","id":"https://localhost:8151/api/commands/modify-policy-max-count"},{"name":"move-policy","rel":"https://api.puppetlabs.com/razor/v1/commands/move-policy","id":"https://localhost:8151/api/commands/move-policy"},{"name":"reboot-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reboot-node","id":"https://localhost:8151/api/commands/reboot-node"},{"name":"register-node","rel":"https://api.puppetlabs.com/razor/v1/commands/register-node","id":"https://localhost:8151/api/commands/register-node"},{"name":"reinstall-node","rel":"https://api.puppetlabs.com/razor/v1/commands/reinstall-node","id":"https://localhost:8151/api/commands/reinstall-node"},{"name":"remove-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-node-metadata","id":"https://localhost:8151/api/commands/remove-node-metadata"},{"name":"remove-policy-tag","rel":"https://api.puppetlabs.com/razor/v1/commands/remove-policy-tag","id":"https://localhost:8151/api/commands/remove-policy-tag"},{"name":"set-node-desired-power-state","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-desired-power-state","id":"https://localhost:8151/api/commands/set-node-desired-power-state"},{"name":"set-node-hw-info","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-hw-info","id":"https://localhost:8151/api/commands/set-node-hw-info"},{"name":"set-node-ipmi-credentials","rel":"https://api.puppetlabs.com/razor/v1/commands/set-node-ipmi-credentials","id":"https://localhost:8151/api/commands/set-node-ipmi-credentials"},{"name":"update-node-metadata","rel":"https://api.puppetlabs.com/razor/v1/commands/update-node-metadata","id":"https://localhost:8151/api/commands/update-node-metadata"},{"name":"update-tag-rule","rel":"https://api.puppetlabs.com/razor/v1/commands/update-tag-rule","id":"https://localhost:8151/api/commands/update-tag-rule"}],"collections":[{"name":"brokers","rel":"https://api.puppetlabs.com/razor/v1/collections/brokers","id":"https://localhost:8151/api/collections/brokers"},{"name":"repos","rel":"https://api.puppetlabs.com/razor/v1/collections/repos","id":"https://localhost:8151/api/collections/repos"},{"name":"tags","rel":"https://api.puppetlabs.com/razor/v1/collections/tags","id":"https://localhost:8151/api/collections/tags"},{"name":"policies","rel":"https://api.puppetlabs.com/razor/v1/collections/policies","id":"https://localhost:8151/api/collections/policies"},{"name":"nodes","rel":"https://api.puppetlabs.com/razor/v1/collections/nodes","id":"https://localhost:8151/api/collections/nodes"},{"name":"tasks","rel":"https://api.puppetlabs.com/razor/v1/collections/tasks","id":"https://localhost:8151/api/collections/tasks"},{"name":"commands","rel":"https://api.puppetlabs.com/razor/v1/collections/commands","id":"https://localhost:8151/api/collections/commands"}],"version":{"server":"v0.14.1-113-g8b33d83-dirty"}}'
    http_version:
  recorded_at: Fri, 16 May 2014 21:36:47 GMT
- request:
    method: get
    uri: https://localhost:8151/api/commands/update-tag-rule
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Etag:
      - '"server-version-v0.14.1-113-g8b33d83-dirty"'
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '2307'
      Date:
      - Fri, 16 May 2014 21:36:47 GMT
    body:
      encoding: US-ASCII
      string: '{"name":"update-tag-rule","help":{"full":"# SYNOPSIS\nUpdate the matching
        rule for an existing tag\n\n# DESCRIPTION\nThis will change the rule of the
        given tag to the new rule. The tag will be\nreevaluated against all nodes
        and each node''s tag attribute will be updated to\nreflect whether the tag
        now matches or not, i.e., the tag will be added\nto/removed from each node''s
        tag as appropriate.\n\nIf the tag is used by any policies, the update will
        only be performed if the\noptional parameter `force` is set to `true`. Otherwise,
        it will fail.\n\n\n# Access Control\n\nThis command''s access control pattern:
        `commands:update-tag-rule:%{name}`\n\nWords surrounded by `%{...}` are substitutions
        from the input data: typically\nthe name of the object being modified, or
        some other critical detail, these\nallow roles to be granted partial access
        to modify the system.\n\nFor more detail on how the permission strings are
        structured and work, you can\nsee the [Shiro Permissions documentation][shiro].  That
        pattern is expanded\nand then a permission check applied to it, before the
        command is authorized.\n\nThese checks only apply if security is enabled in
        the Razor configuration\nfile; on this server security is currently disabled.\n\n[shiro]:
        https://shiro.apache.org/permissions.html\n\n# Attributes\n\n * name\n   -
        The tag to change the rule of\n   - This attribute is required\n   - It must
        be of type string.\n   - It must match the name of an existing tag.\n\n *
        rule\n   - The new rule to apply to the tag\n   - This attribute is required\n   -
        It must be of type array.\n\n * force\n   - By default this command will fail
        if the tag is in use by an existing\n   policy.  This flag allows you to override
        that, and force the change to\n   apply despite the tag being in use.\n   \n   This
        will not change policy binding of nodes, which may lead to some\n   counter-intuitive
        results such as a node that does *not* match policy\n   tags being bound to
        the policy.\n   - It must be of type boolean.\n\n\n\n# EXAMPLES\n  An example
        of updating a tag rule, and forcing reevaluation:\n  \n  {\n    \"name\":
        \"small\",\n    \"rule\": [\"<=\", [\"fact\", \"processorcount\"], \"2\"],\n    \"force\":
        true\n  }\n\n"},"schema":{"name":{"type":"string"},"rule":{"type":"array"},"force":{"type":"boolean"}}}'
    http_version:
  recorded_at: Fri, 16 May 2014 21:36:47 GMT
recorded_with: VCR 2.5.0
